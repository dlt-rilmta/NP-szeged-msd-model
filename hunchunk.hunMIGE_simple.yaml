#!/bin/sh
# -*- coding: utf-8, vim: expandtab:ts=4 -*-
# The origin of the idea of 'runable yaml': https://gist.github.com/corvax19/5661251
python3 -c '
import yaml
import sys

try:
    yaml.load(sys.stdin)

except yaml.YAMLError as exc:
    if hasattr(exc, "problem_mark"):
        shifting = 20  # Line no. where "%YAML 1.1" is! (Numbering starts from 0!)
        exc.problem_mark.line += shifting
        exc.context_mark.line += shifting
    print("Syntax error: {0}".format(exc))
    sys.exit(1)

print("Syntax OK!")
'<<EOF
%YAML 1.1
---
default:
 cutoff: 1  #  1 if not set
 radius: 5  # -1 if not set

# Example:
# kivilágított    kivilágított    [Afp-sn]MIGE    -       [Afp-sn]        0       12      12      I-N_2+
# év      év      [Nc-sn] NX[abstract=YES,countable=YES,encnt=YES,measure=YES,time=YES]   év/elvont_fogalom/mennyiség/időszak/alapmértékegység/naptári_év  0       2       2       I-N_2+

features:
 - # Kr code patterns of a sentence (extended version)
   # For use with MSD code! (Endrédy & Indig 2015, 1st column in Table 6)
    name: mypatt
    type: sentence
    actionName: krPatts
    fields: 2
    radius: 0  # rad is not radius!
    options:
        rad: 3  # The old config is misleading!
        minLength: 2
        maxLength: 99
        lang: hu
        MSD: 1
        since_dt: 1  # (Endrédy & Indig 2015, section 4.2)
        CASDiff: 1  # (Endrédy & Indig 2015, section 4.2)
        POSSConnect: 1  # (Endrédy & Indig 2015, section 4.2)
        fullKr: 0

 #~ - # Does it have capital letter in it anywhere? (old isCapitalizedOperator)
    #~ name: capitalized
    #~ type: token
    #~ actionName: hasCapOperator
    #~ fields: 0
#~ 
 #~ - # Token starts with number?
    #~ name: startswithnumber
    #~ type: token
    #~ actionName: startsWithNumberOperator
    #~ fields: 0
#~ 
 #~ - # Does 'stupidstem' contain letters or only numbers and puncts?
    #~ name: isnumber
    #~ type: token
    #~ actionName: isNumberOperator
    #~ fields: 0
#~ 
 #~ - # Does the token contain number?
    #~ name: hasnumber
    #~ type: token
    #~ actionName: hasNumberOperator
    #~ fields: 0
#~ 
  #~ - # Does 'stupidstem' contain only capital letters?
    #~ name: allcaps
    #~ type: token
    #~ actionName: isAllcapsOperator
    #~ fields: 0
#~ 
  #~ - # Is the token Camel case?
    #~ name: camel
    #~ type: token
    #~ actionName: isCamelOperator
    #~ fields: 0
#~
  #~ - # Does the token contain dash?
    #~ name: hasdash
    #~ type: token
    #~ actionName: hasDashOperator
    #~ fields: 0
#~
  #~ - # Does the token contain period?
    #~ name: hasperiod
    #~ type: token
    #~ actionName: hasPeriodOperator
    #~ fields: 0
#~
  #~ - # Token pattern: lowercase -> 'a', uppercase -> 'A', other -> '_', merge neighbouring characters if they are same
    #~ name: shortpattern
    #~ type: token
    #~ actionName: shortPattern
    #~ fields: 0
#~
 - # Checks for underscore (_) character in token (duplicate)
    name: hasunderscore
    type: token
    actionName: hasUnderscoreOperator
    fields: 0

 - # Checks for underscore (_) character in token
    name: form
    type: token
    actionName: getForm
    fields: 0

 - # N-grams of the letters in a token
    name: ngr
    type: token
    actionName: ngrams
    fields: 0
    options:
        n: 3

 #~ - # Kr code pieces
    #~ name: kr
    #~ type: token
    #~ actionName: krPieces
    #~ fields: 2
#~
 #~ - # Kr code pieces (wn or kr is in field 4)
    #~ name: kr
    #~ type: token
    #~ actionName: krPieces
    #~ fields: 4

 - # Split Humor code to pieces (Here MSD codes is extracted by this feature)
    name: humor
    type: token
    actionName: humorPieces
    fields: 2

 #~ - # Description: XXX Fill me!
    #~ name: hibrid
    #~ type: token
    #~ actionName: humorSimple
    #~ fields: 3
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: stemH
    #~ type: token
    #~ actionName: humorSimple
    #~ fields: 1
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: stemH
    #~ type: token
    #~ actionName: humorSimple
    #~ fields: 1
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: cats
    #~ type: token
    #~ actionName: humorSimple
    #~ fields: 2
#~ 
 #~ - # Description: XXX Fill me!
    #~ name: cats
    #~ type: token
    #~ actionName: humorPieces
    #~ fields: 3
#~ 
 #~ - # MMO features
    #~ name: mmo
    #~ type: token
    #~ actionName: mmoSimple
    #~ fields: 3
#~ 
 #~ - # WordNet features
    #~ name: wn
    #~ type: token
    #~ actionName: wordNetSimple
    #~ fields: 4
#~ 
 #~ - # Stopword or not?
    #~ name: stopw
    #~ type: token
    #~ actionName: humorSimple
    #~ fields: 5
#~ 
 #~ - # Length of token?
    #~ name: length
    #~ type: token
    #~ actionName: humorSimple
    #~ fields: 6
#~ 
 #~ - # Position in sentence...
    #~ name: position
    #~ type: token
    #~ actionName: humorSimple
    #~ fields: 7
#~ 
 #~ - # The n caracter long prefix of a token
    #~ name: prefix
    #~ type: token
    #~ actionName: prefix
    #~ fields: 0
    #~ options:
    #~     n: 3  # XXX No default value!
#~ 
 #~ - # The first letter of the BNC tag which is roughly the main POS tag (old posStart)
    #~ name: posstart
    #~ type: token
    #~ actionName: firstChar
    #~ fields: 1
#~
 #~ - # Checks if the neighbouring tokens have the same grammatical case
    #~ name: bwsamecases
    #~ type: sentence
    #~ actionName: isBetweenSameCases
    #~ fields: 1

...
EOF
